<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition  xmlns="http://www.w3.org/1999/xhtml"
                 xmlns:ui="http://java.sun.com/jsf/facelets"
                 template="../../Templates/paginasTemplate.xhtml"
                 xmlns:p="http://primefaces.org/ui"
                 xmlns:h="http://java.sun.com/jsf/html"
                 xmlns:f="http://java.sun.com/jsf/core"
                 xmlns:b="http://bootsfaces.net/ui"
                 >



    <ui:define name="content">


        <h3>
            <h:outputText value="Informe de Pago - Alumnos"></h:outputText>
            <h:outputText id="idPreferencia" value=" ID  =  #{mercadoPagoBean.preferenceId}" />
        </h3>
        <h:form id="informePagoAlumnoListForm">
             
            <p:panel header="Carga de Comprobantes">
                <h:panelGrid columns="2" style="width: 50%" >
                    <h:outputText value="Alumno: "></h:outputText>
                    <h2><h:outputText value="#{loginAlumnoBean.alumno}"></h:outputText></h2>
                </h:panelGrid>

                <p:panel id="pnCohortesConsulta" 
                         >
                    <p:dataTable  id="dtCortesCobros"
                                  value="#{cohorteLstBean.lstCohortesAlumnosConsulta}"
                                  var="cort"  
                                  rowKey="#{cort.id}">
                        <p:column width="10%">
                            <p:commandButton id="btnBuscar"
                                             actionListener="#{informePagoAlumnoController.obtenerComprobantesAlumno(loginAlumnoBean.alumno,cort)}"
                                             icon="ui-icon-search"
                                             styleClass="boton"
                                             process="informePagoAlumnoListForm:datalist, @this"
                                             />

                        </p:column>
                        <p:column>
                            <f:facet name="header">
                                <h:outputText value="Carrera"/>
                            </f:facet>
                            <h:outputText value="#{cort.carrera.descripcion}"/>
                        </p:column>
                        <p:column>
                            <f:facet name="header">
                                <h:outputText value="Cohorte"/>
                            </f:facet>
                            <h:outputText value="#{cort.descripcion}"/>
                        </p:column>
                        <p:column>
                            <f:facet name="header">
                                <h:outputText value="AÃ±o"/>
                            </f:facet>
                            <h:outputText value="#{cort.anio}"/>
                        </p:column>
                        <p:column>
                            <f:facet name="header">
                                <h:outputText value="Pagar"/>
                            </f:facet>
                            <div align="center">
                                <!-- COMENTAR ESTE BOTON MIENTRAS NO SE TERMINE LO DE MERCADO PAGO -->
                                <p:commandButton id="btnPagar" 
                                                 icon="ui-icon-cart"
                                                 action="#{mercadoPagoBean.cargarPreferencia(cort, loginAlumnoBean.alumno)}"
                                                 styleClass="boton"
                                                 oncomplete="PF('MercadoPagoDialog').show()"
                                                 update="idPreferencia"
                                                 /> 
                            </div>

                        </p:column>

                      
                    </p:dataTable>
                   
                    <h:outputText value="Haga Click en la lupa para seleccionar Cohorte y cargar el detalle de la cuotas pagas - De lo contrario la operacion no se llevara a cabo"/>


                </p:panel>
                <p:dataTable id="datalist" value="#{informePagoAlumnoController.items}" var="item"
                             selectionMode="single" selection="#{informePagoAlumnoController.selected}"
                             paginator="true"
                             rowKey="#{item.id}"
                             rows="10"
                             rowsPerPageTemplate="10,20,30,40,50"
                             filterEvent="enter"
                             >
                    <!--ajax aqui abajo-->
                    
                    <p:ajax event="rowSelect"   update="createButtonIPA editButtonIPA deleteButtonIPA"/>
                    <p:ajax event="rowUnselect" update="createButtonIPA editButtonIPA deleteButtonIPA"/>

                    <p:column style="text-align: center;  width: 60">
                        <f:facet name="header">
                            <h:outputText value="#{bundleInformePagoAlumno.ListInformePagoAlumnoTitle_id}"/>
                        </f:facet>
                        <h:outputText value="#{item.id}"/>
                    </p:column>
                    <p:column>
                        <f:facet name="header">
                            <h:outputText value="#{bundleInformePagoAlumno.ListInformePagoAlumnoTitle_alumno}"/>
                        </f:facet>
                        <h:outputText value="#{item.alumno}"/>
                    </p:column>
                    <p:column style="text-align: center">
                        <f:facet name="header">
                            <h:outputText value="#{bundleInformePagoAlumno.ListInformePagoAlumnoTitle_cohorte}"/>
                        </f:facet>
                        <h:outputText value="#{item.cohorte}"/>
                    </p:column>
                    <p:column style="text-align: center">
                        <f:facet name="header">
                            <h:outputText value="#{bundleInformePagoAlumno.ListInformePagoAlumnoTitle_nroCuota}"/>
                        </f:facet>
                        <h:outputText value="#{item.nroCuota}"/>
                    </p:column>

                    <p:column style="text-align: center">
                        <f:facet name="header">
                            <h:outputText value="Cantidad de Cuotas"/>
                        </f:facet>
                        <h:outputText value="#{item.cantidadCuotas}"/>
                    </p:column>

                    <p:column>
                        <f:facet name="header">
                            <h:outputText value="#{bundleInformePagoAlumno.ListInformePagoAlumnoTitle_descripcion}"/>
                        </f:facet>
                        <h:outputText value="#{item.descripcion}"/>
                    </p:column>
                    <p:column style="text-align: center">
                        <f:facet name="header">
                            <h:outputText value="#{bundleInformePagoAlumno.ListInformePagoAlumnoTitle_fecha}"/>
                        </f:facet>
                        <h:outputText value="#{item.fecha}">
                            <f:convertDateTime pattern="dd/MM/yyyy HH:mm:ss" />
                        </h:outputText>
                    </p:column>
                    <p:column>
                        <f:facet name="header">
                            <h:outputText value="#{bundleInformePagoAlumno.ListInformePagoAlumnoTitle_comprobantePago}"/>
                        </f:facet>
                        <h:outputText value="#{item.nombreComprobantePago}"/>
                    </p:column>
                    <p:column style="text-align: center">
                        <f:facet name="header">
                            <h:outputText value="Estado del Comprobante"/>
                        </f:facet>
                        <h:outputText value="#{item.estadoComprobanteAlumno.name}"/>
                    </p:column>
                    <p:column style="text-align: center">
                        <f:facet name="header">
                            <h:outputText value="Mensaje del Sistema"/>
                        </f:facet>
                        <h:outputText value="#{item.respuestaSistema}"/>
                    </p:column>
                    <p:column style="text-align: center; width: 150">
                        <f:facet name="header">
                            <h:outputText value="Descargar"/>
                        </f:facet>
                        <b:commandButton iconAwesome="fa-thin fa-download" value="" action="#{informePagoAlumnoController.FileDownloadView(item)}"
                                         look="success">
                            <p:fileDownload value="#{informePagoAlumnoController.file}"/>
                        </b:commandButton>
                    </p:column>
                    <f:facet name="footer">
                        <p:commandButton id="createButtonIPA" icon="ui-icon-plus"   value="#{bundleInformePagoAlumno.Create}" actionListener="#{informePagoAlumnoController.prepareCreate}" update=":InformePagoAlumnoCreateForm" oncomplete="PF('InformePagoAlumnoCreateDialog').show()"/>
                        <p:commandButton id="editButtonIPA"   icon="ui-icon-pencil" value="Modificar Comprobante" update=":InformePagoAlumnoEditForm" oncomplete="PF('InformePagoAlumnoEditDialog').show()" disabled="#{informePagoAlumnoController.esAprobado() || empty informePagoAlumnoController.selected}"/>
                        <p:commandButton id="deleteButtonIPA" icon="ui-icon-trash"  value="#{bundleInformePagoAlumno.Delete}" actionListener="#{informePagoAlumnoController.destroy}" update=":frmPri:growl,datalist" disabled="#{informePagoAlumnoController.esAprobado() || empty informePagoAlumnoController.selected}"/>
                    </f:facet>
                </p:dataTable>
            
                
            </p:panel>
            <script>

                let metodo = () =>{
                    console.log("Hola metodo");
                    console.log("Bean disponible?: ", #{mercadoPagoBean != null});
                    console.log("PreferenceId existe?: ", #{mercadoPagoBean.preferenceId != null});
                    console.log("PreferenceId: ", #{mercadoPagoBean.preferenceId});
                    //let pref = document.getElementById("hiddenPreferenceId").value;
                    const preferenciaXD = document.getElementById("idPreferencia").textContent;
                    console.log("preferencia=== ", preferenciaXD); // AquÃ­ deberÃ­a aparecer el ID correctamente 
                }
                
                
                function crearBotonMercadoPago(){
                    console.log("entro crearBotonMercadoPago")
                    //BUSCAMOS Y ELIMINAMOS EL CONTENEDOR DEL BOTON DE MERCADO PAGO
                    let containerId = "wallet_container" // ID Ãºnico para la fila
                    let container = document.getElementById(containerId);
                    container.innerHTML = "";
                    //CREAMOS EL NUEVO BOTON
                    let mp;
                    //let preferencia ="";
                    console.log("entro crearboton MP")
                    //preferencia = document.getElementById("hiddenPreferenceId").value;
                    var preferencia = document.getElementById("idPreferencia").textContent;
                    console.log("preferencia in  constante = " + preferencia)
                    //console.log("cohorteId= "+cohorteId)
                    // Inicializar el SDK de Mercado Pago  (PUBLIC KEY)
                    mp = new MercadoPago('TEST-f6cbd094-4e69-49f3-b61e-ccf7c7f7ecd1', {
                        locale: 'es-AR'
                    });
                    console.log('Objeto MP:', Object.keys(mp));
                    // Crear el botÃ³n de pago en el contenedor designado
                    
                    mp.bricks().create("wallet", "wallet_container", {
                        initialization: {
                            preferenceId: preferencia,
                            redirectMode: "blank", //blank funca   self nop jajaj
                        },
                        customization: {
                            texts: {
                                valueProp: 'smart_option',
                            },
                        },
                         callbacks: {
                                 onReady: function() {
                                      console.log("Brick renderizado correctamente");
                                 },
                                onError: function(error) { // Callback sÃ­ncrono para errores
                                        console.error(" Error en Brick:", {
                                         code: error.code,
                                         message: error.message,
                                          details: error
                                 });
                                     },
                                onSubmit: function() {
                                            console.log("Formulario enviado (sin redirecciÃ³n automÃ¡tica)");
                                            PF('MercadoPagoDialog').hide();
                                            return Promise.resolve(); // Permite la redirecciÃ³n
                                   }
                            }
                    });
                    console.log("preferenciaaaaa = " + preferencia)
                }

            </script>

              

        </h:form>
        
         <!--  <div id="wallet_container"></div>-->
         <!-- Dialog de MP -->

        <p:dialog widgetVar="MercadoPagoDialog" 
          header="Completar Pago" 
          modal="true" 
          resizable="false"
          width="20%" 
          height="auto"
          onShow="metodo()"> <!-- Inicializa el Brick al abrir -->
    
             <!-- Contenedor del Brick (DEBE estar visible al inicializarse) -->
            <div id="wallet_container" style="min-height: 10px;"></div>
    
           
           </p:dialog>
         
        <ui:include src="Create.xhtml"/>
        <ui:include src="Edit.xhtml"/>
        <ui:include src="View.xhtml"/>
    </ui:define>
</ui:composition>

